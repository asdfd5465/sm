name: Android CI Debug Build

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  build_debug:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        run: |
          echo "ANDROID_SDK_ROOT=${HOME}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${HOME}/android-sdk" >> $GITHUB_ENV
          SDK_CMD_TOOLS_PATH="${HOME}/android-sdk/cmdline-tools/latest/bin"
          SDK_PLATFORM_TOOLS_PATH="${HOME}/android-sdk/platform-tools"
          echo "$SDK_CMD_TOOLS_PATH" >> $GITHUB_PATH
          echo "$SDK_PLATFORM_TOOLS_PATH" >> $GITHUB_PATH
          mkdir -p ${HOME}/android-sdk/cmdline-tools
          CMDTOOLS_VERSION_ZIP="commandlinetools-linux-11076708_latest.zip"
          wget --quiet "https://dl.google.com/android/repository/${CMDTOOLS_VERSION_ZIP}" -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ${HOME}/android-sdk/cmdline-tools
          mv ${HOME}/android-sdk/cmdline-tools/cmdline-tools ${HOME}/android-sdk/cmdline-tools/latest
          rm cmdline-tools.zip
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools" > /dev/null
          
      - name: Setup Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # --- START OF CORRECTED SIGNING LOGIC (BASED ON YOUR WORKING EXAMPLE) ---
      - name: Decode Keystore and Set Signing Environment
        # This step only runs if the keystore secret exists
        if: secrets.SIGNING_KEYSTORE_BASE64 != ''
        run: |
          echo "Decoding keystore..."
          # Define the path for the keystore file within the runner
          KEYSTORE_FILE_PATH="${{ github.workspace }}/bankwiser-debug-key.jks"
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > $KEYSTORE_FILE_PATH
          
          echo "Setting up signing environment variables for Gradle..."
          # Export the variables to be used by all subsequent steps in this job
          echo "SIGNING_KEYSTORE_PATH=$KEYSTORE_FILE_PATH" >> $GITHUB_ENV
          echo "SIGNING_KEYSTORE_PASSWORD=${{ secrets.SIGNING_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "SIGNING_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> $GITHUB_ENV
          
          echo "Keystore decoded and signing variables exported."
      
      - name: Build and Sign Debug APK
        # This step now automatically gets the env vars from the previous step
        # No 'env:' block is needed here
        run: |
          echo "Starting Signed Debug Build..."
          ./gradlew clean assembleDebug
      # --- END OF CORRECTED SIGNING LOGIC ---

      - name: Upload Debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
